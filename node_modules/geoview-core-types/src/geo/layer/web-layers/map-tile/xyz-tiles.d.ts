import { Extent } from 'ol/extent';
import TileLayer from 'ol/layer/Tile';
import XYZ from 'ol/source/XYZ';
import { AbstractWebLayersClass, TypeBaseWebLayersConfig, TypeXYZTiles } from '../../../../core/types/cgpv-types';
export declare const layerConfigIsXYZTiles: (verifyIfLayer: TypeBaseWebLayersConfig) => verifyIfLayer is TypeXYZTiles;
export declare const webLayerIsXYZTiles: (verifyIfWebLayer: AbstractWebLayersClass) => verifyIfWebLayer is XYZTiles;
/**
 * a class to add xyz-tiles layer
 *
 * @exports
 * @class XYZTiles
 */
export declare class XYZTiles extends AbstractWebLayersClass {
    layer: TileLayer<XYZ>;
    /**
     * Initialize layer
     *
     * @param {string} mapId the id of the map
     * @param {TypeXYZTiles} layerConfig the layer configuration
     */
    constructor(mapId: string, layerConfig: TypeXYZTiles);
    /**
     * Add a XYZ Tiles layer to the map.
     *
     * @param {TypeXYZTiles} layer the layer configuration
     * @return {Promise<TileLayer<XYZ> | null>} layers to add to the map
     */
    add(layer: TypeXYZTiles): Promise<TileLayer<XYZ> | null>;
    /**
     * Set Layer Opacity
     * @param {number} opacity layer opacity
     */
    setOpacity: (opacity: number) => void;
    /**
     * Get bounds
     *
     * @returns {Extent} layer bounds
     */
    getBounds: () => Extent;
}
