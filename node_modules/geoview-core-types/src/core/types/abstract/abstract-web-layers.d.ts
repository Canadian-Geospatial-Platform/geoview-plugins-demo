import { Extent } from 'ol/extent';
import { ImageArcGISRest, ImageWMS, Vector as VectorSource, XYZ } from 'ol/source';
import { Vector as VectorLayer, VectorImage, Image as ImageLayer, Tile as TileLayer } from 'ol/layer';
import { TypeWebLayers, TypeBaseWebLayersConfig, TypeLayersInWebLayer } from '../cgpv-types';
export declare abstract class AbstractWebLayersClass {
    type: TypeWebLayers;
    id: string;
    name: string;
    url: string;
    protected mapId: string;
    abstract layer: ImageLayer<ImageArcGISRest> | ImageLayer<ImageWMS> | VectorImage<VectorSource> | VectorLayer<VectorSource> | TileLayer<XYZ>;
    layers: TypeLayersInWebLayer;
    entries?: string[] | number[];
    setEntries?(entries: number[]): void;
    abstract getBounds(): Extent | Promise<Extent>;
    abstract setOpacity(opacity: number): void;
    constructor(type: TypeWebLayers, layerConfig: TypeBaseWebLayersConfig, mapId: string);
}
